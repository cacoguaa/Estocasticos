Inicio del porgrama
pureba minDistance4

*********************Aqui empieza la funcionalidad Basica**********************


****************************Arbol1*********************************************
(file_input (stmt (simple_stmt (small_stmt (import_stmt (import_name import (dotted_as_names (dotted_as_name (dotted_name sys)))))) \n)) (stmt (compound_stmt (funcdef def lazito (parameters ( (typedargslist (tfpdef G) , (tfpdef casa) , (tfpdef arbol)) )) : (suite        (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom casa)))))))))) (comp_op not in) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom casa))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  ))  )))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom ( (testlist_comp (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom casa))))))))))))))))) ])))))))))))))))) )) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom arbol))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))))  )) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom arbol)))))))))) (comp_op not in) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom arbol))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  ))  )))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom ( (testlist_comp (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom arbol))))))))))))))))) ])))))))))))))))) )) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom casa))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (flow_stmt (return_stmt return (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G))))))))))))))))))) \n)) \n)))) (stmt (compound_stmt (funcdef def bfs (parameters ( (typedargslist (tfpdef G) , (tfpdef conchas) , (tfpdef pan) , (tfpdef V)) )) : (suite        (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pan))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom cola)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom [ (testlist_comp (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pan)))))))))))))))) ]))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom estrellitas)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom conchas) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pan))))))))))))))))) ]))))))))))))))))))  )) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom cola)))))))))) (comp_op !=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom [ ]))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pan_actual)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom cola) (trailer . pop) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))) )))))))))))))))))))  )) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pan_actual))))))))))))))))) ])))))))))) (comp_op ==) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))) : (suite                (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom chanclas))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pan_actual))))))))))))))))) ])))))))))))))))) : (suite                    (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom chanclas)))))))))) (comp_op not in) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V))))))))))))))) : (suite                        (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom chanclas))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom cola) (trailer . append) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom chanclas))))))))))))))))) )))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom estrellitas)))))))))))))))) (augassign +=) (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom conchas) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom chanclas))))))))))))))))) ]))))))))))))))))))  ))  ))))  )))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pan_actual))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))))  ))  ))))  )))) (stmt (simple_stmt (small_stmt (flow_stmt (return_stmt return (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom estrellitas))))))))))))))))))) \n)) \n)))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom INFO)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom map) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )) (trailer . split) (trailer ( )))))))))))))))))) ))))))))))))))))))) \n)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom INFO)))))))))) (comp_op !=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom [ (testlist_comp (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))) , (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))) , (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))) ]))))))))))))))) : (suite        (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom conchas)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom estrellitas)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom map) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )) (trailer . split) (trailer ( )))))))))))))))))) )))))))))))))))))))  )) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom INFO) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))) ]))))))))))))))))) ))))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom conchas) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom estrellitas) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))))))))) ]))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  ))  )))) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom INFO) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))) ]))))))))))))))))) ))))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pans)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom map) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )) (trailer . split) (trailer ( )))))))))))))))))) )))))))))))))))))))  ))           (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lazito) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pans) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))) ])))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pans) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))) ]))))))))))))))))) )))))))))))))))))))  ))  ))))  )))) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom INFO) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 2))))))))))))))))))) ]))))))))))))))))) ))))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planeta)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )))))))))))))))))) )))))))))))))))))))  )) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planeta)))))))))) (comp_op >=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom INFO) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))) ]))))))))))))))) : (suite                (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) 0)))))))))))))))))  ))  ) else : (suite                (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) bfs (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom conchas)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planeta)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V))))))))))))))))) )))))))))))))))))))  ))  ))))  )))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom INFO)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom map) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )) (trailer . split) (trailer ( )))))))))))))))))) ))))))))))))))))))) ))) ) it()))


****************************Arbol2*********************************************
(file_input (stmt (simple_stmt (small_stmt (import_stmt (import_name import (dotted_as_names (dotted_as_name (dotted_name sys)))))) \n)) (stmt (compound_stmt (funcdef def make_link (parameters ( (typedargslist (tfpdef G) , (tfpdef node1) , (tfpdef node2)) )) : (suite        (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom node1)))))))))) (comp_op not in) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom node1))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  ))  )))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom ( (testlist_comp (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom node1))))))))))))))))) ])))))))))))))))) )) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom node2))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))))  )) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom node2)))))))))) (comp_op not in) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom node2))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  ))  )))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom ( (testlist_comp (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom node2))))))))))))))))) ])))))))))))))))) )) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom node1))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (flow_stmt (return_stmt return (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G))))))))))))))))))) \n)) \n)))) (stmt (compound_stmt (funcdef def bfs (parameters ( (typedargslist (tfpdef G) , (tfpdef planetas) , (tfpdef nodo) , (tfpdef V)) )) : (suite        (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodo))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom cola)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom [ (testlist_comp (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodo)))))))))))))))) ]))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom puntos)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planetas) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodo))))))))))))))))) ]))))))))))))))))))  )) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom cola)))))))))) (comp_op !=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom [ ]))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodo_actual)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom cola) (trailer . pop) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))) )))))))))))))))))))  )) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodo_actual))))))))))))))))) ])))))))))) (comp_op ==) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))) : (suite                (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom vecino))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodo_actual))))))))))))))))) ])))))))))))))))) : (suite                    (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom vecino)))))))))) (comp_op not in) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V))))))))))))))) : (suite                        (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom vecino))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom cola) (trailer . append) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom vecino))))))))))))))))) )))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom puntos)))))))))))))))) (augassign +=) (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planetas) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom vecino))))))))))))))))) ]))))))))))))))))))  ))  ))))  )))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodo_actual))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))))  ))  ))))  )))) (stmt (simple_stmt (small_stmt (flow_stmt (return_stmt return (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom puntos))))))))))))))))))) \n)) \n)))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom datos)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom map) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )) (trailer . split) (trailer ( )))))))))))))))))) ))))))))))))))))))) \n)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom datos)))))))))) (comp_op !=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom [ (testlist_comp (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))) , (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))) , (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))) ]))))))))))))))) : (suite        (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planetas)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom puntos)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom map) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )) (trailer . split) (trailer ( )))))))))))))))))) )))))))))))))))))))  )) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom datos) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))) ]))))))))))))))))) ))))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planetas) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom puntos) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))))))))) ]))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))))))))) ])))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  ))  )))) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom datos) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))) ]))))))))))))))))) ))))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodos)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom map) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )) (trailer . split) (trailer ( )))))))))))))))))) )))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom make_link) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodos) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))) ])))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom nodos) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 1))))))))))))))))))) ]))))))))))))))))) )))))))))))))))))))  ))  )))) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom datos) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 2))))))))))))))))))) ]))))))))))))))))) ))))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom { }))))))))))))))))))  )) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planeta)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )))))))))))))))))) )))))))))))))))))))  )) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planeta)))))))))) (comp_op >=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom datos) (trailer [ (subscriptlist (subscript (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0))))))))))))))))))) ]))))))))))))))) : (suite                (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) 0)))))))))))))))))  ))  ) else : (suite                (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) bfs (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom G)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planetas)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom planeta)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom V))))))))))))))))) )))))))))))))))))))  ))  ))))  )))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom datos)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom map) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom int)))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom sys) (trailer . stdin) (trailer . readline) (trailer ( )) (trailer . split) (trailer ( )))))))))))))))))) ))))))))))))))))))) ))) ))))) it()))

Mind Distance:285.0
Mind Distance:285.0

**********************************RESULTADOS***********************************

Los codigos han pasado la prueba lexica y sintactico por lo cual es un codigo permitido del lenguaje
Los codigos tienen un %98.8323500491642de acuerdo a su analisis syntactico por la coincidencias de sus arboes AST
Acontinuacion se mostraran los llamados de cada regla de la framatica en el codigo
******Funcion**********llamados en codigo 1*******llamados en codigo 2******Diferencia
funcion:enterAnd_expr			122		0		122
funcion:enterAnd_test			111		0		111
funcion:enterArglist			12		0		12
funcion:enterArgument			24		0		24
funcion:enterArith_expr			122		0		122
funcion:enterAssert_stmt			0		0		0
funcion:enterAtom			122		0		122
funcion:enterAugassign			1		0		1
funcion:enterBreak_stmt			0		0		0
funcion:enterClassdef			0		0		0
funcion:enterComp_for			0		0		0
funcion:enterComp_if			0		0		0
funcion:enterComp_iter			0		0		0
funcion:enterComp_op			7		0		7
funcion:enterComparison			111		0		111
funcion:enterCompound_stmt			13		0		13
funcion:enterContinue_stmt			0		0		0
funcion:enterDecorated			0		0		0
funcion:enterDecorator			0		0		0
funcion:enterDecorators			0		0		0
funcion:enterDel_stmt			0		0		0
funcion:enterDictorsetmaker			0		0		0
funcion:enterDotted_as_name			1		0		1
funcion:enterDotted_as_names			1		0		1
funcion:enterDotted_name			1		0		1
funcion:enterEval_input			0		0		0
funcion:enterEveryRule			2203		0		2203
funcion:enterExcept_clause			0		0		0
funcion:enterExpr			122		0		122
funcion:enterExpr_stmt			25		0		25
funcion:enterExprlist			4		0		4
funcion:enterFactor			122		0		122
funcion:enterFile_input			1		0		1
funcion:enterFlow_stmt			2		0		2
funcion:enterFor_stmt			4		0		4
funcion:enterFuncdef			2		0		2
funcion:enterGlobal_stmt			0		0		0
funcion:enterIf_stmt			5		0		5
funcion:enterImport_as_name			0		0		0
funcion:enterImport_as_names			0		0		0
funcion:enterImport_from			0		0		0
funcion:enterImport_name			1		0		1
funcion:enterImport_stmt			1		0		1
funcion:enterInteger			19		0		19
funcion:enterLambdef			0		0		0
funcion:enterLambdef_nocond			0		0		0
funcion:enterNonlocal_stmt			0		0		0
funcion:enterNot_test			111		0		111
funcion:enterNumber			19		0		19
funcion:enterOr_test			111		0		111
funcion:enterParameters			2		0		2
funcion:enterPass_stmt			0		0		0
funcion:enterPower			122		0		122
funcion:enterRaise_stmt			0		0		0
funcion:enterReturn_stmt			2		0		2
funcion:enterShift_expr			122		0		122
funcion:enterSimple_stmt			28		0		28
funcion:enterSingle_input			0		0		0
funcion:enterSliceop			0		0		0
funcion:enterSmall_stmt			28		0		28
funcion:enterStar_expr			122		0		122
funcion:enterStmt			41		0		41
funcion:enterString			0		0		0
funcion:enterSubscript			22		0		22
funcion:enterSubscriptlist			22		0		22
funcion:enterSuite			14		0		14
funcion:enterTerm			122		0		122
funcion:enterTest			111		0		111
funcion:enterTest_nocond			0		0		0
funcion:enterTestlist			7		0		7
funcion:enterTestlist_comp			4		0		4
funcion:enterTestlist_star_expr			45		0		45
funcion:enterTfpdef			7		0		7
funcion:enterTrailer			59		0		59
funcion:enterTry_stmt			0		0		0
funcion:enterTypedargslist			2		0		2
funcion:enterVarargslist			0		0		0
funcion:enterVfpdef			0		0		0
funcion:enterWhile_stmt			2		0		2
funcion:enterWith_item			0		0		0
funcion:enterWith_stmt			0		0		0
funcion:enterXor_expr			122		0		122
funcion:enterYield_arg			0		0		0
funcion:enterYield_expr			0		0		0
********************************RESUMEN***************************************
Los codigos tienen un %98.8323500491642de acuerdo a su analisis syntactico por la coincidencias de sus arboes AST
El codigo 1 y 2  tiene 4406------0 derivaciones gramaticales respectivamente
El codigo 1 y 2  tiene una media de 52.45238095238095-----0.0 derivaciones gramaticales respectivamente
La desviacion estandar entre las reglas gramaticas llamadas es de: -0.0
