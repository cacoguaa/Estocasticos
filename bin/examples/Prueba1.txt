Inicio del porgrama
pureba minDistance4

*********************Aqui empieza la funcionalidad Basica**********************


****************************Arbol1*********************************************
(file_input (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string 'hola mundo')))))))))))))))))) ))))))))))))))))))) \r\n)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))))) \r\n)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))) (comp_op >) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))))))))) (comp_op <) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom s))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string "asa")))))))))))))))))) ))))))))))))))))))) \t\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string "asa")))))))))))))))))) ))))))))))))))))))) \t\t)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))) : (suite \t\t \t\t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom fun) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \t\t)) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom list)))))))))))))))) : (suite \t\t \t\t\t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom x)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom x)))) + (term (factor (power (atom (number (integer 1)))))))))))))))))))) \t\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom fun) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) \n)))) \n)))) \n)))) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom range) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))))) ))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))))) ))))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))) + (term (factor (power (atom (number (integer 5)))))))))))))))))))) \t\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) \t)))) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))))))))) (comp_op ==) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))) + (term (factor (power (atom (number (integer 1)))))))))))))))))))) \r\n)) \n)))) \n)))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))) (comp_op >) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))) / (factor (power (atom (number (integer 8)))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 4))))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lista))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lista))))))))))))))))) ))))))))))))))))))) \r\n)) \n) elif (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))) (comp_op >=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lista))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lista))))))))))))))))) ))))))))))))))))))) \r\n)) \n) elif (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))) (comp_op >=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))))) ))))))))))))))))))) \r\n)) \n) else : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom false))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string 'hola mundo')))))))))))))))))) ))))))))))))))))))) \r\n)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))))) \r\n)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))) (comp_op >) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))))))))) (comp_op <) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom s))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string "asa")))))))))))))))))) ))))))))))))))))))) \t\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string "asa")))))))))))))))))) ))))))))))))))))))) \t\t)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))) : (suite \t\t \t\t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom fun) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \t\t)) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom list)))))))))))))))) : (suite \t\t \t\t\t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom x)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom x)))) + (term (factor (power (atom (number (integer 1)))))))))))))))))))) \t\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom fun) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) \n)))) \n)))) \n)))) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom range) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))))) ))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))))) ))))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))) + (term (factor (power (atom (number (integer 5)))))))))))))))))))) \t\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) \t)))) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))))))))) (comp_op ==) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))) + (term (factor (power (atom (number (integer 1)))))))))))))))))))) \r\n)) \n)))) \n)))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))) (comp_op >) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))) / (factor (power (atom (number (integer 8)))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 4))))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lista))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lista))))))))))))))))) ))))))))))))))))))) \r\n)) \n) elif (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))) (comp_op >=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lista))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom lista))))))))))))))))) ))))))))))))))))))) \r\n)) \n) elif (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))) (comp_op >=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))))) ))))))))))))))))))) \r\n)) \n) else : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom false))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) <EOF>)


****************************Arbol2*********************************************
(file_input (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))) (comp_op >) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))) / (factor (power (atom (number (integer 8)))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 4))))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pato))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pato))))))))))))))))) ))))))))))))))))))) \r\n)) \n) elif (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))) (comp_op >=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pato))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom pato))))))))))))))))) ))))))))))))))))))) \r\n)) \n) elif (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))) (comp_op >=) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))))) ))))))))))))))))))) \r\n)) \n) else : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom false))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string 'Este es codigo Plagio')))))))))))))))))) ))))))))))))))))))) \r\n)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 0)))))))))))))))))))) \r\n)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))) (comp_op >) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))))))))) (comp_op <) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom s))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string "asa")))))))))))))))))) ))))))))))))))))))) \t\t)) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b))))))))))))))) : (suite \t\t \t\t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom casa) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \t\t)) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom list)))))))))))))))) : (suite \t\t \t\t\t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom x)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom x)))) + (term (factor (power (atom (number (integer 1)))))))))))))))))))) \t\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom casa) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))))))))) ))))))))))))))))))) \t\t)) \t)))) \t)))) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (string "carton")))))))))))))))))) ))))))))))))))))))) \r\n)) \n)))) \n)))) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom range) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3)))))))))))))))))) , (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))))) ))))))))))))))))) : (suite \n\t \t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) (stmt (compound_stmt (for_stmt for (exprlist (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom j))))))))))) in (testlist (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom xrange) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 5))))))))))))))))))) ))))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom a)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))) + (term (factor (power (atom (number (integer 5)))))))))))))))))))) \t\t)) (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom print) (trailer ( (arglist (argument (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom (number (integer 3))))))))))))))))))) ))))))))))))))))))) \n\t)) \t)))) (stmt (compound_stmt (while_stmt while (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom b)))))))))) (comp_op ==) (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom true))))))))))))))) : (suite \t\t \t\t (stmt (simple_stmt (small_stmt (expr_stmt (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))))))))))))))) = (testlist_star_expr (test (or_test (and_test (not_test (comparison (star_expr (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom i)))) + (term (factor (power (atom (number (integer 1)))))))))))))))))))) \r\n)) \n)))) \n)))) <EOF>)

Mind Distance:15297.0
Mind Distance:15297.0

**********************************RESULTADOS***********************************

Los codigos han pasado la prueba lexica y sintactico por lo cual es un codigo permitido del lenguaje
Los codigos tienen un %42.53136974979338de acuerdo a su analisis syntactico por la coincidencias de sus arboes AST
Acontinuacion se mostraran los llamados de cada regla de la framatica en el codigo
******Funcion**********llamados en codigo 1*******llamados en codigo 2******Diferencia
funcion:enterAnd_expr			132		4356		4224
funcion:enterAnd_test			114		3249		3135
funcion:enterArglist			36		324		288
funcion:enterArgument			38		361		323
funcion:enterArith_expr			132		4356		4224
funcion:enterAssert_stmt			0		0		0
funcion:enterAtom			140		4900		4760
funcion:enterAugassign			0		0		0
funcion:enterBreak_stmt			0		0		0
funcion:enterClassdef			0		0		0
funcion:enterComp_for			0		0		0
funcion:enterComp_if			0		0		0
funcion:enterComp_iter			0		0		0
funcion:enterComp_op			12		36		24
funcion:enterComparison			114		3249		3135
funcion:enterCompound_stmt			20		100		80
funcion:enterContinue_stmt			0		0		0
funcion:enterDecorated			0		0		0
funcion:enterDecorator			0		0		0
funcion:enterDecorators			0		0		0
funcion:enterDel_stmt			0		0		0
funcion:enterDictorsetmaker			0		0		0
funcion:enterDotted_as_name			0		0		0
funcion:enterDotted_as_names			0		0		0
funcion:enterDotted_name			0		0		0
funcion:enterEval_input			0		0		0
funcion:enterEveryRule			2439		1485961		1483522
funcion:enterExcept_clause			0		0		0
funcion:enterExpr			132		4356		4224
funcion:enterExpr_stmt			42		441		399
funcion:enterExprlist			6		9		3
funcion:enterFactor			140		4900		4760
funcion:enterFile_input			1		0		1
funcion:enterFlow_stmt			0		0		0
funcion:enterFor_stmt			6		9		3
funcion:enterFuncdef			0		0		0
funcion:enterGlobal_stmt			0		0		0
funcion:enterIf_stmt			6		9		3
funcion:enterImport_as_name			0		0		0
funcion:enterImport_as_names			0		0		0
funcion:enterImport_from			0		0		0
funcion:enterImport_name			0		0		0
funcion:enterImport_stmt			0		0		0
funcion:enterInteger			36		324		288
funcion:enterLambdef			0		0		0
funcion:enterLambdef_nocond			0		0		0
funcion:enterNonlocal_stmt			0		0		0
funcion:enterNot_test			114		3249		3135
funcion:enterNumber			36		324		288
funcion:enterOr_test			114		3249		3135
funcion:enterParameters			0		0		0
funcion:enterPass_stmt			0		0		0
funcion:enterPower			140		4900		4760
funcion:enterRaise_stmt			0		0		0
funcion:enterReturn_stmt			0		0		0
funcion:enterShift_expr			132		4356		4224
funcion:enterSimple_stmt			42		441		399
funcion:enterSingle_input			0		0		0
funcion:enterSliceop			0		0		0
funcion:enterSmall_stmt			42		441		399
funcion:enterStar_expr			132		4356		4224
funcion:enterStmt			62		961		899
funcion:enterString			6		9		3
funcion:enterSubscript			0		0		0
funcion:enterSubscriptlist			0		0		0
funcion:enterSuite			26		169		143
funcion:enterTerm			138		4761		4623
funcion:enterTest			114		3249		3135
funcion:enterTest_nocond			0		0		0
funcion:enterTestlist			6		9		3
funcion:enterTestlist_comp			0		0		0
funcion:enterTestlist_star_expr			52		676		624
funcion:enterTfpdef			0		0		0
funcion:enterTrailer			36		324		288
funcion:enterTry_stmt			0		0		0
funcion:enterTypedargslist			0		0		0
funcion:enterVarargslist			0		0		0
funcion:enterVfpdef			0		0		0
funcion:enterWhile_stmt			8		16		8
funcion:enterWith_item			0		0		0
funcion:enterWith_stmt			0		0		0
funcion:enterXor_expr			132		4356		4224
funcion:enterYield_arg			0		0		0
funcion:enterYield_expr			0		0		0
********************************RESUMEN***************************************
Los codigos tienen un %42.53136974979338de acuerdo a su analisis syntactico por la coincidencias de sus arboes AST
El codigo 1 y 2  tiene 4878------1552786 derivaciones gramaticales respectivamente
El codigo 1 y 2  tiene una media de 58.07142857142857-----18485.54761904762 derivaciones gramaticales respectivamente
La desviacion estandar entre las reglas gramaticas llamadas es de: 213.70581758714067
